name: YouTube Action
description: GitHub action for YouTube, powered by yutu🐰
branding:
    icon: cast
    color: red

inputs:
  version:
    description: 'Version of the yutu binary to download'
    required: false
    default: ''
  credential:
    description: 'Base64 encoded credential to authenticate with the YouTube API'
    required: true
  token:
    description: 'Base64 encoded token to authenticate with the YouTube API'
    required: true
  command:
    description: 'Command to run, such as `video`, `channel` or `playlist`'
    required: false
    default: 'video'
  subcommand:
    description: 'Subcommand to run, such as `insert`, `update` or `list`'
    required: false
    default: ''
  flags:
    description: 'Flags passed to the command/subcommand'
    required: false
    default: ''

outputs:
  response:
    description: 'Response from the yutu command'
    value: ${{ steps.run.outputs.response }}

runs:
  using: composite
  steps:
    - uses: robinraju/release-downloader@v1.10
      with:
        repository: eat-pray-ai/yutu
        latest: ${{ inputs.version == '' }}
        tag: ${{ inputs.version }}
        fileName: yutu-linux-amd64
    - id: run
      shell: bash
      run: |
        chmod +x yutu-linux-amd64
        echo -n ${{ inputs.credential }} | base64 --decode > ./client_secret.json
        echo -n ${{ inputs.token }} | base64 --decode > ./youtube.token.json

        flags=$(echo ${{ inputs.flags }} | tr -d '\n')
        if [[ $flags =~ "-o json" || $flags =~ "--output json" ]]; then
          command="$command | jq -R"
          ./yutu-linux-amd64 ${{ inputs.command }} ${{ inputs.subcommand }} ${{ inputs.flags }} | jq 'tojson' > output
        else
          ./yutu-linux-amd64 ${{ inputs.command }} ${{ inputs.subcommand }} ${{ inputs.flags }} > output
        fi
        cat output

        {
          echo "response<<EOF"
          echo "$(cat output)"
          echo "EOF"
        } >> $GITHUB_OUTPUT
